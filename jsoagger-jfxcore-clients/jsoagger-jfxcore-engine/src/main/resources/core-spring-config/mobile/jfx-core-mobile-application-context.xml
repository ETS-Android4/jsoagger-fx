<?xml version="1.0" encoding="UTF-8"?>
<!--
  ========================LICENSE_START=================================
  JSoagger 
  %%
  Copyright (C) 2019 JSOAGGER
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  =========================LICENSE_END==================================
  -->


<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-lazy-init="true" profile="mobile">

	
	<bean id="styleSheetManager" class="io.github.jsoagger.jfxcore.engine.components.css.StyleSheetsManager">
		<property name="styleSheetsPath">
			<list>
				<value>classpath:/css/color/accent/blue.css</value>
				<value>classpath:/css/color/primary/deep-orange.css</value>
				<value>classpath:/css/content/light/light-desktop.css</value>
				<value>classpath:/css/undecorator/undecorator.css</value>
				<value>classpath:/io/github/jsoagger/core/jfx/controller/login/login.css</value>
			</list>
		</property>
	</bean>

	<util:properties id="screenProperties" value-type="java.lang.String">
		<prop key="width">800</prop>
		<prop key="height">800</prop>
	</util:properties>

	<util:properties id="wizardProperties" value-type="java.lang.String">
		<prop key="width">800</prop>
		<prop key="height">600</prop>
	</util:properties>

	<!-- This is the matrix used to calculate width of each three areas composing threeZoneBorderPane. -->
	<util:list id="DefaultRootStructureContentResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:830#0:1:0#minimize::hide</value>
		<value>830:1100#0.10:0.90:0.10#minimize::hide</value>
		<value>1100:1300#0.15:0.70:0.15#minimize::hide</value>
		<value>1300:1600#0.20:0.60:0.20#minimize::minimize</value>
		<value>1600:1700#0.20:0.60:0.20#::</value>
		<value>1700:1900#0.25:0.50:0.25#::</value>
		<value>1900#0.30:0.40:0.30#::</value>
	</util:list>

	<util:list id="DefaultRootStructureHeaderResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:830#0.50:0:0.50#:hide:hide</value>
		<value>830:1100#0.50:0:0.50#minimize:hide:minimize</value>
		<value>1100:1300#0.15:0.70:0.15#minimize:show:minimize</value>
		<value>1300:1600#0.20:0.60:0.20#minimize:show:minimize</value>
		<value>1600:1700#0.20:0.60:0.20#::</value>
		<value>1700:1900#0.25:0.50:0.25#::</value>
		<value>1900#0.30:0.40:0.30#::</value>
	</util:list>

	<bean id="DefaultRootStructureContentResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="DefaultRootStructureContentResponsiveMatrixDefinition" />
	</bean>

	<bean id="DefaultRootStructureHeaderResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="DefaultRootStructureHeaderResponsiveMatrixDefinition" />
	</bean>

	<bean id="PreferencesManagementContentResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="PreferencesManagementContentResponsiveMatrixDefinition" />
	</bean>

	<util:list id="PreferencesManagementContentResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:1200#0.95:0.05#:</value>
		<value>1200:1600#0.50:0.50#:</value>
		<value>1600#0.30:0.70#:</value>
	</util:list>

	<!-- Default matrix for three panes where the centered element is always centered, CenteredThreeHPanesViewLayout with CenteredThreePaneResponsiveMatrix has 0.05% left and right paddding -->
	<bean id="CenteredThreePaneResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="CenteredThreePaneResponsiveMatrixDefinition" />
	</bean>

	<util:list id="CenteredThreePaneResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:800#0.05:0.90:0.05#::</value>
		<value>800:1000#0.15:0.70:0.15#::</value>
		<value>1000:1400#0.20:0.60:0.20#::</value>
		<value>1600#0.30:0.40:0.30#::</value>
	</util:list>

	<bean id="CenteredThreeHPanesViewLayout" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.layout.FixedLeftThreeHPanesViewLayoutManager">
		<property name="responsiveMatrix" ref="CenteredThreePaneResponsiveMatrix" />
	</bean>

	<bean id="SinglePaneViewLayout" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.layout.ScrolledSinglePaneViewLayoutManager">
		<property name="responsiveMatrix" ref="SinglePaneViewLayoutResponsiveMatrix" />
	</bean>

	<bean id="SinglePaneViewLayoutResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="SinglePaneViewLayoutResponsiveMatrixDefinition" />
	</bean>

	<util:list id="SinglePaneViewLayoutResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:1400#1:0#minimize:</value>
		<value>1400#1:0#:</value>
	</util:list>

	<bean id="SinglePaneWithoutScrollViewLayout" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.layout.ScrollLessSinglePaneViewLayoutManager">
		<property name="responsiveMatrix" ref="SinglePaneViewLayoutResponsiveMatrix" />
	</bean>

	<!-- TWO PANES LAYOUT -->
	<bean id="TwoHPanesViewLayout" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.layout.TwoHPanesViewLayoutManager">
		<property name="responsiveMatrix" ref="TwoHPanesViewLayoutResponsiveMatrix" />
	</bean>

	<bean id="TwoHPanesViewLayoutResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="TwoHPanesViewLayoutResponsiveMatrixDefinition" />
	</bean>

	<util:list id="TwoHPanesViewLayoutResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>0:800#1:0#:hide</value>
		<value>800:1000#0.40:0.60#:minimize</value>
		<value>1000:1200#0.35:0.65#:minimize</value>
		<value>1200:1600#0.30:0.80#:</value>
		<value>1600#0.30:0.80#:</value>
	</util:list>

	<!-- Default header toolbar responsive matrix -->
	<util:list id="HeaderToolbarResponsiveMatrixDefinition" list-class="java.util.ArrayList" value-type="java.lang.String" scope="prototype">
		<value>0:1500#0.40:0:0.60#:hide:</value>
		<value>1500#0.40:0:0.60#:hide:</value>
	</util:list>

	<bean id="HeaderToolbarResponsiveMatrix" class="io.github.jsoagger.jfxcore.engine.controller.roostructure.util.ParentResponsiveMatrix" scope="prototype">
		<constructor-arg index="0" ref="HeaderToolbarResponsiveMatrixDefinition" />
	</bean>

	<!--**************************************************************************************************************************************************************** LIST OF ICONS DEFINITION FILE TO LOAD CLINET MUST OVERRIDE THIS BEAN IN ORDER TO ADD NEW FILE FOR RESOLVING 
		MODEL ICONS **************************************************************************************************************************************************************** -->
	<util:list id="IconDefinitionFiles" list-class="java.util.ArrayList" value-type="java.lang.String">
		<value>/core-icon-mapping.properties</value>
	</util:list>

	<bean id="ModelIconUtils" class="io.github.jsoagger.jfxcore.engine.components.presenter.utils.ModelIconUtils" scope="singleton" lazy-init="true" />
</beans>

